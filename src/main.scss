// Hikma UI Framework - Main SCSS Entry Point
// This file imports all the necessary modules in a logical order.

// 1. Core & Configuration
// These files contain global variables, mixins, and base styles.
// They should be imported first so their definitions are available everywhere.
@use 'core/variables';
@use 'core/mixins';
@use 'core/base'; // Base includes reset, html, body, and heading styles

// 2. Layout Modules
// Define the structural components of the page.
@use 'layout/container';
@use 'layout/grid';
@use 'layout/sections'; // Your custom section styles

// 3. Component Styles
// Specific UI components. They rely on variables and mixins from core.
@use 'components/button';
@use 'components/form'; // Add other components
@use 'components/card';
@use 'components/navbar';
@use 'components/breadcrumb';
@use 'components/pagination';
@use 'components/alert';
@use 'components/badge';
@use 'components/modal';
@use 'components/dropdown';
@use 'components/navs'; // (for Tabs/Pills)
@use 'components/carousel';
@use 'components/spinner';
@use 'components/toast';

// 4. Utility Classes
// Single-purpose, reusable classes that often override component styles with `!important`.
// They should come after components to ensure they can override.
@use 'utilities/utilities'; // General utility styles
@use 'utilities/responsive'; // General responsive helpers
@use 'utilities/spacing';
@use 'utilities/flex';
@use 'utilities/text';
@use 'utilities/display';
@use 'utilities/sizing';
@use 'utilities/borders';
@use 'utilities/shadows';
@use 'utilities/position';
@use 'utilities/z-index';
@use 'utilities/opacity';
@use 'utilities/visibility';
@use 'utilities/float';
@use 'utilities/screen-readers';
@use 'utilities/interactions';
@use 'utilities/overflow';
@use 'utilities/align';

// 5. Theme Styles / Overrides
// Specific themes (like dark mode) or any global overrides that change existing styles.
// These should generally be imported last to easily override previous styles.
@use 'theme/dark-mode';

// add custom styles here if needed, or create a separate file for project-specific styles
// @use 'custom-styles';
