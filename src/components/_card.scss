// Components - Card
// This file defines styles for a versatile content container known as a card.

:root {
	// Card specific variables
	--byte-card-spacer-x: 1.25rem;
	--byte-card-spacer-y: 0.75rem;
	--byte-card-border-width: var(--byte-border-width);
	--byte-card-border-color: var(--byte-border-color-base);
	--byte-card-border-radius: var(--byte-border-radius);
	--byte-card-bg: var(--byte-background-color-base);
	--byte-card-box-shadow: var(
		--byte-box-shadow
	); // Using default shadow utility
	--byte-card-cap-bg: var(
		--byte-background-color-light
	); // Header/Footer background
	--byte-card-cap-color: var(--byte-text-color-base);
	--byte-card-title-mb: 0.75rem; // Margin bottom for card title
	--byte-card-text-mb: 1rem; // Margin bottom for card text
}

.card {
	position: relative;
	display: flex;
	flex-direction: column;
	min-width: 0; // Allows the card to shrink smaller than its content
	word-wrap: break-word; // Ensures long words break
	background-color: var(--byte-card-bg);
	background-clip: border-box;
	border: var(--byte-card-border-width) solid var(--byte-card-border-color);
	border-radius: var(--byte-card-border-radius);
	box-shadow: var(--byte-card-box-shadow);

	> hr {
		// Separator within card
		margin-right: 0;
		margin-left: 0;
	}

	> .list-group {
		// If using list groups inside cards
		border-top: inherit;
		border-bottom: inherit;

		&:first-child {
			border-top-left-radius: calc(
				var(--byte-card-border-radius) - var(--byte-card-border-width)
			);
			border-top-right-radius: calc(
				var(--byte-card-border-radius) - var(--byte-card-border-width)
			);
		}

		&:last-child {
			border-bottom-left-radius: calc(
				var(--byte-card-border-radius) - var(--byte-card-border-width)
			);
			border-bottom-right-radius: calc(
				var(--byte-card-border-radius) - var(--byte-card-border-width)
			);
		}
	}
}

.card-body {
	flex: 1 1 auto;
	padding: var(--byte-card-spacer-y) var(--byte-card-spacer-x);
	color: var(--byte-text-color-base);
}

.card-title {
	margin-bottom: var(--byte-card-title-mb);
	font-size: 1.25rem; // Example size
	font-weight: 500;
}

.card-subtitle {
	margin-top: calc(
		var(--byte-card-title-mb) * -0.5
	); // Adjust spacing relative to title
	margin-bottom: 0;
	font-size: 0.875rem;
	color: var(--byte-text-color-muted);
}

.card-text {
	&:last-child {
		margin-bottom: 0; // Remove margin from last paragraph
	}
}

.card-link {
	&:hover {
		text-decoration: none;
	}

	+ .card-link {
		// Spacing between multiple links
		margin-left: var(--byte-card-spacer-x);
	}
}

.card-header,
.card-footer {
	padding: var(--byte-card-spacer-y) var(--byte-card-spacer-x);
	margin-bottom: 0;
	background-color: var(--byte-card-cap-bg);
	border-bottom: var(--byte-card-border-width) solid
		var(--byte-card-border-color);
	color: var(--byte-card-cap-color);

	&:first-child {
		border-radius: calc(
				var(--byte-card-border-radius) - var(--byte-card-border-width)
			)
			calc(var(--byte-card-border-radius) - var(--byte-card-border-width)) 0 0;
	}

	&:last-child {
		border-top: var(--byte-card-border-width) solid
			var(--byte-card-border-color); // Border for footer
		border-bottom-right-radius: calc(
			var(--byte-card-border-radius) - var(--byte-card-border-width)
		);
		border-bottom-left-radius: calc(
			var(--byte-card-border-radius) - var(--byte-card-border-width)
		);
	}
}

.card-header {
	border-bottom: var(--byte-card-border-width) solid
		var(--byte-card-border-color);
}

.card-footer {
	border-top: var(--byte-card-border-width) solid var(--byte-card-border-color);
}

.card-img,
.card-img-top,
.card-img-bottom {
	width: 100%;
}

.card-img-top {
	border-top-left-radius: calc(
		var(--byte-card-border-radius) - var(--byte-card-border-width)
	);
	border-top-right-radius: calc(
		var(--byte-card-border-radius) - var(--byte-card-border-width)
	);
}

.card-img-bottom {
	border-bottom-left-radius: calc(
		var(--byte-card-border-radius) - var(--byte-card-border-width)
	);
	border-bottom-right-radius: calc(
		var(--byte-card-border-radius) - var(--byte-card-border-width)
	);
}
